name: Build and Deploy to Cloud Run
on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read   # allow pulling the repository code

    steps:
      # 1. Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Authenticate to Google Cloud
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}   # JSON key for service account
          project_id: ${{ secrets.GCP_PROJECT_ID }}        # GCP Project ID
          export_default_credentials: true                # Configure ADC for gcloud and docker&#8203;:contentReference[oaicite:0]{index=0}

      # 3. Configure Docker to use GCR credentials
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker --quiet   # Auth for GCR push&#8203;:contentReference[oaicite:1]{index=1}

      # 4. Build the Docker image and push to Google Container Registry
      - name: Build and Push Docker image
        env:
          IMAGE_NAME: sellercentral-chatbot
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          TAG: ${{ github.sha }}
        run: |
          docker build -t gcr.io/$PROJECT_ID/$IMAGE_NAME:$TAG .
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$TAG&#8203;:contentReference[oaicite:2]{index=2}

      # 5. Deploy the image to Cloud Run
      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud run deploy sellercentral-chatbot \
            --image gcr.io/$PROJECT_ID/sellercentral-chatbot:${{ github.sha }} \
            --region us-central1 --platform managed --allow-unauthenticated \
            --service-account ${{ secrets.CLOUDRUN_SA_EMAIL }} \
            --set-env-vars HF_TOKEN=${{ secrets.HF_TOKEN }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }},LANGFUSE_PUBLIC_KEY=${{ secrets.LANGFUSE_PUBLIC_KEY }},LANGFUSE_SECRET_KEY=${{ secrets.LANGFUSE_SECRET_KEY }},LANGFUSE_HOST=${{ secrets.LANGFUSE_HOST }}
